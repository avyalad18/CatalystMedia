# Generated by Django 5.0.3 on 2024-03-16 07:53

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_created=True, db_column='date_joined', null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(db_column='username', max_length=255, unique=True)),
                ('password', models.CharField(db_column='password', max_length=255)),
                ('email', models.CharField(db_column='email', max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, db_column='first_name', max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, db_column='last_name', max_length=150, null=True)),
                ('is_active', models.BooleanField(db_column='is_active', default=True)),
                ('is_superuser', models.BooleanField(db_column='is_superuser', default=False)),
                ('is_staff', models.BooleanField(db_column='is_staff', default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
